hossein@hossein-System-Product-Name:~/Dropbox/singular$ Singular
                     SINGULAR                                 /
 A Computer Algebra System for Polynomial Computations       /   version 4.0.3
                                                           0<
 by: W. Decker, G.-M. Greuel, G. Pfister, H. Schoenemann     \   Jan 2016
FB Mathematik der Universitaet, D-67653 Kaiserslautern        \  Debian 4.0.3+ds-1
> LIB "foliation.lib"; 
// ** loaded foliation.lib (v,2.34)
// ** loaded /usr/bin/../share/singular/LIB/finvar.lib (4.0.1.1,Dec_2104)
// ** loaded /usr/bin/../share/singular/LIB/algebra.lib (4.0.1.1,Dec_2014)
// ** loaded /usr/bin/../share/singular/LIB/ring.lib (4.0.2.2,Jan_2016)
// ** loaded /usr/bin/../share/singular/LIB/primdec.lib (4.0.2.0,Apr_2015)
// ** loaded /usr/bin/../share/singular/LIB/absfact.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/triang.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/random.lib (4.0.0.0,Jun_2013)
// ** redefining `lcm` **
// ** redefining lcm **
// ** loaded /usr/bin/../share/singular/LIB/poly.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/inout.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/general.lib (4.0.0.1,Jan_2014)
// ** loaded /usr/bin/../share/singular/LIB/elim.lib (4.0.0.1,Jan_2014)
// ** loaded /usr/bin/../share/singular/LIB/matrix.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/nctools.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/linalg.lib (4.0.0.0,Jun_2013)
>  int n=2; int d=8; intvec ci_1=3,3;   int tru=5; int zb=10; int whichline=1; 
>  list lofa=intvec(0,d-1,0,d-1), intvec(0,0,0,d-1), intvec(0,0,0,0);
>  intvec b=intvec(0,1,2,3);
>  list  lcycles;  int i; int j;
>  intvec mlist=d;  for (int i=1;i<=n; i=i+1){mlist=mlist,d;}
// ** redefining i **
>  intvec zarib1=1,-zb; intvec zarib2=zb,zb; list ll; 
>  intvec besh=1, ci_1[1]*ci_1[2]+1, ci_1[1]*ci_1[2]+2;
>        for (i=1;i<=ci_1[1]; i=i+1)
.         { 
.          for (j=1;j<=ci_1[2]; j=j+1)
.              { 
.               lcycles=insert(lcycles, list( intvec(0,j-1,0,i-1),b), size(lcycles));
.              }
.         } 
>       lcycles=insert(lcycles, list(lofa[whichline],b), size(lcycles)); 
>       
.    ll=SmoothReduced(mlist,tru, lcycles, zarib1, zarib2, besh,0); 

Codimensions of tangent spaces
27
5
Codimensions of sum of cycles in big and small deformation spaces
31 31
Codimension of the intersection of tangent spaces
32
Deformation space
[1]:
   x(1)^6*x(3)^2
[2]:
   x(1)^6*x(2)*x(3)
[3]:
   x(1)^5*x(3)^3
[4]:
   x(1)^4*x(3)^3
[5]:
   x(1)^6*x(2)^2
[6]:
   x(1)^5*x(2)*x(3)^2
[7]:
   x(1)^4*x(2)*x(3)^2
[8]:
   x(1)^4*x(3)^4
[9]:
   x(1)^3*x(3)^4
[10]:
   x(1)^2*x(3)^4
[11]:
   x(1)^5*x(2)^2*x(3)
[12]:
   x(1)^4*x(2)^2*x(3)
[13]:
   x(1)^4*x(2)*x(3)^3
[14]:
   x(1)^3*x(2)*x(3)^3
[15]:
   x(1)^2*x(2)*x(3)^3
[16]:
   x(3)^5
[17]:
   x(1)^2*x(2)*x(3)^4
[18]:
   x(1)^3*x(2)*x(3)^4
[19]:
   x(1)^4*x(2)^2*x(3)^2
[20]:
   x(1)^3*x(2)^2*x(3)^2
[21]:
   x(1)^2*x(2)^2*x(3)^2
[22]:
   x(1)*x(2)*x(3)^4
[23]:
   x(1)^2*x(2)^2*x(3)^3
[24]:
   x(1)^3*x(2)^2*x(3)^3
[25]:
   x(2)^2*x(3)^4
[26]:
   x(1)^2*x(2)*x(3)^5
[27]:
   x(1)*x(2)^3*x(3)^3
[28]:
   x(1)^5*x(3)^2
[29]:
   x(1)^3*x(3)^3
[30]:
   x(1)*x(3)^4
[31]:
   x(1)*x(2)^2*x(3)^3
[32]:
   x(2)^3*x(3)^3
Number of generators of the Hodge locus ideal: 35
x(3)^4
x(2)*x(3)^3
x(1)*x(3)^3
x(3)^3
x(2)^2*x(3)^2
x(1)*x(2)*x(3)^2
x(2)*x(3)^2
x(1)^2*x(3)^2
x(1)*x(3)^2
x(3)^2
x(2)^3*x(3)
x(1)*x(2)^2*x(3)
x(2)^2*x(3)
x(1)^2*x(2)*x(3)
x(1)*x(2)*x(3)
x(2)*x(3)
x(1)^3*x(3)
x(1)^2*x(3)
x(1)*x(3)
x(3)
x(2)^4
x(1)*x(2)^3
x(2)^3
x(1)^2*x(2)^2
x(1)*x(2)^2
x(2)^2
x(1)^3*x(2)
x(1)^2*x(2)
x(1)*x(2)
x(2)
x(1)^4
x(1)^3
x(1)^2
x(1)
1
Number of generators of the Hodge locus ideal: 35
x(3)^4
x(2)*x(3)^3
x(1)*x(3)^3
x(3)^3
x(2)^2*x(3)^2
x(1)*x(2)*x(3)^2
x(2)*x(3)^2
x(1)^2*x(3)^2
x(1)*x(3)^2
x(3)^2
x(2)^3*x(3)
x(1)*x(2)^2*x(3)
x(2)^2*x(3)
x(1)^2*x(2)*x(3)
x(1)*x(2)*x(3)
x(2)*x(3)
x(1)^3*x(3)
x(1)^2*x(3)
x(1)*x(3)
x(3)
x(2)^4
x(1)*x(2)^3
x(2)^3
x(1)^2*x(2)^2
x(1)*x(2)^2
x(2)^2
x(1)^3*x(2)
x(1)^2*x(2)
x(1)*x(2)
x(2)
x(1)^4
x(1)^3
x(1)^2
x(1)
1
Checking the reducedness
>    ll[1];
[1]:
   1,-10
[2]:
   1,-9
[3]:
   1,-8
[4]:
   1,-7
[5]:
   1,-6
[6]:
   1,-5
[7]:
   1,-4
[8]:
   1,-3
[9]:
   1,-2
[10]:
   1,-1
[11]:
   1,0
[12]:
   1,1
[13]:
   1,2
[14]:
   1,3
[15]:
   1,4
[16]:
   1,5
[17]:
   1,6
[18]:
   1,7
[19]:
   1,8
[20]:
   1,9
[21]:
   1,10
[22]:
   2,-10
[23]:
   2,-9
[24]:
   2,-8
[25]:
   2,-7
[26]:
   2,-6
[27]:
   2,-5
[28]:
   2,-4
[29]:
   2,-3
[30]:
   2,-2
[31]:
   2,-1
[32]:
   2,0
[33]:
   2,1
[34]:
   2,2
[35]:
   2,3
[36]:
   2,4
[37]:
   2,5
[38]:
   2,6
[39]:
   2,7
[40]:
   2,8
[41]:
   2,9
[42]:
   2,10
[43]:
   3,-10
[44]:
   3,-9
[45]:
   3,-8
[46]:
   3,-7
[47]:
   3,-6
[48]:
   3,-5
[49]:
   3,-4
[50]:
   3,-3
[51]:
   3,-2
[52]:
   3,-1
[53]:
   3,0
[54]:
   3,1
[55]:
   3,2
[56]:
   3,3
[57]:
   3,4
[58]:
   3,5
[59]:
   3,6
[60]:
   3,7
[61]:
   3,8
[62]:
   3,9
[63]:
   3,10
[64]:
   4,-10
[65]:
   4,-9
[66]:
   4,-8
[67]:
   4,-7
[68]:
   4,-6
[69]:
   4,-5
[70]:
   4,-4
[71]:
   4,-3
[72]:
   4,-2
[73]:
   4,-1
[74]:
   4,0
[75]:
   4,1
[76]:
   4,2
[77]:
   4,3
[78]:
   4,4
[79]:
   4,5
[80]:
   4,6
[81]:
   4,7
[82]:
   4,8
[83]:
   4,9
[84]:
   4,10
[85]:
   5,-10
[86]:
   5,-9
[87]:
   5,-8
[88]:
   5,-7
[89]:
   5,-6
[90]:
   5,-5
[91]:
   5,-4
[92]:
   5,-3
[93]:
   5,-2
[94]:
   5,-1
[95]:
   5,0
[96]:
   5,1
[97]:
   5,2
[98]:
   5,3
[99]:
   5,4
[100]:
   5,5
[101]:
   5,6
[102]:
   5,7
[103]:
   5,8
[104]:
   5,9
[105]:
   5,10
[106]:
   6,-10
[107]:
   6,-9
[108]:
   6,-8
[109]:
   6,-7
[110]:
   6,-6
[111]:
   6,-5
[112]:
   6,-4
[113]:
   6,-3
[114]:
   6,-2
[115]:
   6,-1
[116]:
   6,0
[117]:
   6,1
[118]:
   6,2
[119]:
   6,3
[120]:
   6,4
[121]:
   6,5
[122]:
   6,6
[123]:
   6,7
[124]:
   6,8
[125]:
   6,9
[126]:
   6,10
[127]:
   7,-10
[128]:
   7,-9
[129]:
   7,-8
[130]:
   7,-7
[131]:
   7,-6
[132]:
   7,-5
[133]:
   7,-4
[134]:
   7,-3
[135]:
   7,-2
[136]:
   7,-1
[137]:
   7,0
[138]:
   7,1
[139]:
   7,2
[140]:
   7,3
[141]:
   7,4
[142]:
   7,5
[143]:
   7,6
[144]:
   7,7
[145]:
   7,8
[146]:
   7,9
[147]:
   7,10
[148]:
   8,-10
[149]:
   8,-9
[150]:
   8,-8
[151]:
   8,-7
[152]:
   8,-6
[153]:
   8,-5
[154]:
   8,-4
[155]:
   8,-3
[156]:
   8,-2
[157]:
   8,-1
[158]:
   8,0
[159]:
   8,1
[160]:
   8,2
[161]:
   8,3
[162]:
   8,4
[163]:
   8,5
[164]:
   8,6
[165]:
   8,7
[166]:
   8,8
[167]:
   8,9
[168]:
   8,10
[169]:
   9,-10
[170]:
   9,-9
[171]:
   9,-8
[172]:
   9,-7
[173]:
   9,-6
[174]:
   9,-5
[175]:
   9,-4
[176]:
   9,-3
[177]:
   9,-2
[178]:
   9,-1
[179]:
   9,0
[180]:
   9,1
[181]:
   9,2
[182]:
   9,3
[183]:
   9,4
[184]:
   9,5
[185]:
   9,6
[186]:
   9,7
[187]:
   9,8
[188]:
   9,9
[189]:
   9,10
[190]:
   10,-10
[191]:
   10,-9
[192]:
   10,-8
[193]:
   10,-7
[194]:
   10,-6
[195]:
   10,-5
[196]:
   10,-4
[197]:
   10,-3
[198]:
   10,-2
[199]:
   10,-1
[200]:
   10,0
[201]:
   10,1
[202]:
   10,2
[203]:
   10,3
[204]:
   10,4
[205]:
   10,5
[206]:
   10,6
[207]:
   10,7
[208]:
   10,8
[209]:
   10,9
[210]:
   10,10
> ll[2];
empty list
> 





























hossein@hossein-System-Product-Name:~$ cd Dropbox;
hossein@hossein-System-Product-Name:~/Dropbox$ cd singular
hossein@hossein-System-Product-Name:~/Dropbox/singular$ Singular
                     SINGULAR                                 /
 A Computer Algebra System for Polynomial Computations       /   version 4.0.3
                                                           0<
 by: W. Decker, G.-M. Greuel, G. Pfister, H. Schoenemann     \   Jan 2016
FB Mathematik der Universitaet, D-67653 Kaiserslautern        \  Debian 4.0.3+ds-1
> LIB "foliation.lib";
// ** loaded foliation.lib (v,2.34)
// ** loaded /usr/bin/../share/singular/LIB/finvar.lib (4.0.1.1,Dec_2104)
// ** loaded /usr/bin/../share/singular/LIB/algebra.lib (4.0.1.1,Dec_2014)
// ** loaded /usr/bin/../share/singular/LIB/ring.lib (4.0.2.2,Jan_2016)
// ** loaded /usr/bin/../share/singular/LIB/primdec.lib (4.0.2.0,Apr_2015)
// ** loaded /usr/bin/../share/singular/LIB/absfact.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/triang.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/random.lib (4.0.0.0,Jun_2013)
// ** redefining `lcm` **
// ** redefining lcm **
// ** loaded /usr/bin/../share/singular/LIB/poly.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/inout.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/general.lib (4.0.0.1,Jan_2014)
// ** loaded /usr/bin/../share/singular/LIB/elim.lib (4.0.0.1,Jan_2014)
// ** loaded /usr/bin/../share/singular/LIB/matrix.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/nctools.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/linalg.lib (4.0.0.0,Jun_2013)
> int n=2; int d=8; int zb=10; int tru=2; 
> int gene=11; //--a generic coefficient;  
> int dhalf= d div 2; int d1; int d2; int s1; int s2; int m1; int m2;
> int i; int j; list ll; 
> list Periods; list lcycles; intvec besh; list pkom; list lMpij; int a1; int a2; 
> intvec mlist=d;  for (i=1;i<=n; i=i+1){mlist=mlist,d;}
> 
. ring r=(0,z), (x(1..n+1)),dp;
> poly cp=cyclotomic(2*d); int degext=deg(cp) div deg(var(1));
> cp=subst(cp, x(1),z); minpoly =number(cp);
> list compo0; list compo1; list compo2; list compo3; list compo4; intvec cods; list dta; int count;
> exit;
Auf Wiedersehen.
hossein@hossein-System-Product-Name:~/Dropbox/singular$ Singular
                     SINGULAR                                 /
 A Computer Algebra System for Polynomial Computations       /   version 4.0.3
                                                           0<
 by: W. Decker, G.-M. Greuel, G. Pfister, H. Schoenemann     \   Jan 2016
FB Mathematik der Universitaet, D-67653 Kaiserslautern        \  Debian 4.0.3+ds-1
> LIB "foliation.lib";
// ** loaded foliation.lib (v,2.34)
// ** loaded /usr/bin/../share/singular/LIB/finvar.lib (4.0.1.1,Dec_2104)
// ** loaded /usr/bin/../share/singular/LIB/algebra.lib (4.0.1.1,Dec_2014)
// ** loaded /usr/bin/../share/singular/LIB/ring.lib (4.0.2.2,Jan_2016)
// ** loaded /usr/bin/../share/singular/LIB/primdec.lib (4.0.2.0,Apr_2015)
// ** loaded /usr/bin/../share/singular/LIB/absfact.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/triang.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/random.lib (4.0.0.0,Jun_2013)
// ** redefining `lcm` **
// ** redefining lcm **
// ** loaded /usr/bin/../share/singular/LIB/poly.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/inout.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/general.lib (4.0.0.1,Jan_2014)
// ** loaded /usr/bin/../share/singular/LIB/elim.lib (4.0.0.1,Jan_2014)
// ** loaded /usr/bin/../share/singular/LIB/matrix.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/nctools.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/linalg.lib (4.0.0.0,Jun_2013)
> int n=2; int d=8; int zb=10; int tru=2; 
> int gene=11; //--a generic coefficient;  
> int dhalf= d div 2; int d1; int d2; int s1; int s2; int m1; int m2;
> int i; int j; list ll; 
> list Periods; list lcycles; intvec besh; list pkom; list lMpij; int a1; int a2; 
> intvec mlist=d;  for (i=1;i<=n; i=i+1){mlist=mlist,d;}
> 
. ring r=(0,z), (x(1..n+1)),dp;
> poly cp=cyclotomic(2*d); int degext=deg(cp) div deg(var(1));
> cp=subst(cp, x(1),z); minpoly =number(cp);
> list compo0; list compo1; list compo2; list compo3; list compo4; intvec cods; list dta; int count;
> ^Z
[1]+  Stopped                 Singular
hossein@hossein-System-Product-Name:~/Dropbox/singular$ Singular
                     SINGULAR                                 /
 A Computer Algebra System for Polynomial Computations       /   version 4.0.3
                                                           0<
 by: W. Decker, G.-M. Greuel, G. Pfister, H. Schoenemann     \   Jan 2016
FB Mathematik der Universitaet, D-67653 Kaiserslautern        \  Debian 4.0.3+ds-1
> LIB "foliation.lib";
// ** loaded foliation.lib (v,2.34)
// ** loaded /usr/bin/../share/singular/LIB/finvar.lib (4.0.1.1,Dec_2104)
// ** loaded /usr/bin/../share/singular/LIB/algebra.lib (4.0.1.1,Dec_2014)
// ** loaded /usr/bin/../share/singular/LIB/ring.lib (4.0.2.2,Jan_2016)
// ** loaded /usr/bin/../share/singular/LIB/primdec.lib (4.0.2.0,Apr_2015)
// ** loaded /usr/bin/../share/singular/LIB/absfact.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/triang.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/random.lib (4.0.0.0,Jun_2013)
// ** redefining `lcm` **
// ** redefining lcm **
// ** loaded /usr/bin/../share/singular/LIB/poly.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/inout.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/general.lib (4.0.0.1,Jan_2014)
// ** loaded /usr/bin/../share/singular/LIB/elim.lib (4.0.0.1,Jan_2014)
// ** loaded /usr/bin/../share/singular/LIB/matrix.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/nctools.lib (4.0.0.0,Jun_2013)
// ** loaded /usr/bin/../share/singular/LIB/linalg.lib (4.0.0.0,Jun_2013)
> int n=2; int d=8; int zb=10; int tru=3; 
> int gene=11; //--a generic coefficient;  
> int dhalf= d div 2; int d1; int d2; int s1; int s2; int m1; int m2;
> int i; int j; list ll; 
> list Periods; list lcycles; intvec besh; list pkom; list lMpij; int a1; int a2; 
> intvec mlist=d;  for (i=1;i<=n; i=i+1){mlist=mlist,d;}
> 
. ring r=(0,z), (x(1..n+1)),dp;
> poly cp=cyclotomic(2*d); int degext=deg(cp) div deg(var(1));
> cp=subst(cp, x(1),z); minpoly =number(cp);
> list compo0; list compo1; list compo2; list compo3; list compo4; intvec cods; list dta; int count;
> d1=3; d2=3; s1=1; s2=1; m1=0; m2=0; 
> intvec(d1,d2), "*", intvec(s1,s2), "*",  intvec(m1,m2);
3,3 * 1,1 * 0,0
>                         ll=TwoCI(n,d,intvec(d1,d2),intvec(s1,s2),intvec(m1,m2));
>                         lcycles=ll[1]; besh=ll[2];
>                         Periods=list();
>                         for (i=1; i<=size(lcycles); i=i+1)
.                             {
.                             Periods=insert(Periods, 
.                             PeriodLinearCycle(mlist, lcycles[i][1], lcycles[i][2],par(1)), size(Periods));
.                             }
>                         pkom=list();          
>                         for (i=1; i<=size(besh)-1; i=i+1)
.                             { 
.                             for (j=besh[i]+1; j<=besh[i+1]-1; j=j+1)
.                                 {  
.                                 Periods[besh[i]]=Periods[besh[i]]+Periods[j];
.                                 }
.                             pkom=insert(pkom, Periods[besh[i]], size(pkom));     
.                             }
>                         Periods=pkom;
>                         lMpij=list(); 
>                         for (i=1; i<=size(Periods); i=i+1)
.                             {
.                             lMpij=insert(lMpij, Matrixpij(mlist, Periods[i]), size(lMpij));
.                             }
>                         cods=rank(lMpij[1]), rank(lMpij[2]), rank(lMpij[1]+gene*lMpij[2]),
.                              rank(concat(transpose(lMpij[1]), transpose(lMpij[2])));
>                         dta=intvec(d1,d2), intvec(s1,s2), intvec(m1,m2), cods;
>                          
.                         if (cods[3]==binomial(d-1,3) and cods[3]<>cods[4])
.                            {compo0=insert(compo0, dta, size(compo0)); 
.                            }
>                         if (cods[3]==cods[4])
.                            {compo1=insert(compo1, dta, size(compo1)); 
.                             cods;
.                            }
>                         if (cods[3]<binomial(d-1,3) and cods[3]<>cods[4])
.                             {
.                             ll=SmoothReduced(mlist,tru, lcycles, intvec(1,-zb), intvec(zb,zb), besh,0); 
.                             if (size(ll[1])<>zb*(2*zb+1))
.                                {ll[1];
.                                 dta= insert(dta, ll[1], size(dta));
.                                 compo2=insert(compo2, dta, size(compo2));
.                                }
.                             else
.                                { 
.                                "All Smooth, Checking tru+1 reducedness!!!!!!!!!!!!!!!!!!!!tru=", tru+1;
.                                 ll=SmoothReduced(mlist,tru+1, lcycles, intvec(1,-zb), intvec(zb,zb), besh,0);
.                                 if (size(ll[1])<>zb*(2*zb+1))
.                                    {ll[1];
.                                     dta= insert(dta, ll[1], size(dta));
.                                     compo3=insert(compo3, dta, size(compo3));
.                                    }
.                                 else
.                                     {
.                                     "All Smooth, Checking tru+2 reducedness!!!!!!!!!!!!!!!!!!!!tru=", tru+2;
.                                     ll=SmoothReduced(mlist,tru+2, lcycles, intvec(1,-zb), intvec(zb,zb), besh,0);
.                                     dta=insert(dta, ll[1], size(dta));
.                                     compo4=insert(compo4, dta, size(compo4));
.                                     }
.                                }
.                            }
Codimensions of tangent spaces
27
5
Codimensions of sum of cycles in big and small deformation spaces
31 31
Codimension of the intersection of tangent spaces
32
Deformation space
[1]:
   x(1)^6*x(3)^2
[2]:
   x(1)^6*x(2)*x(3)
[3]:
   x(1)^5*x(3)^3
[4]:
   x(1)^4*x(3)^3
[5]:
   x(1)^6*x(2)^2
[6]:
   x(1)^5*x(2)*x(3)^2
[7]:
   x(1)^4*x(2)*x(3)^2
[8]:
   x(1)^4*x(3)^4
[9]:
   x(1)^3*x(3)^4
[10]:
   x(1)^2*x(3)^4
[11]:
   x(1)^5*x(2)^2*x(3)
[12]:
   x(1)^4*x(2)^2*x(3)
[13]:
   x(1)^4*x(2)*x(3)^3
[14]:
   x(1)^3*x(2)*x(3)^3
[15]:
   x(1)^2*x(2)*x(3)^3
[16]:
   x(3)^5
[17]:
   x(1)^2*x(2)*x(3)^4
[18]:
   x(1)^3*x(2)*x(3)^4
[19]:
   x(1)^4*x(2)^2*x(3)^2
[20]:
   x(1)^3*x(2)^2*x(3)^2
[21]:
   x(1)^2*x(2)^2*x(3)^2
[22]:
   x(1)*x(2)*x(3)^4
[23]:
   x(1)^2*x(2)^2*x(3)^3
[24]:
   x(1)^3*x(2)^2*x(3)^3
[25]:
   x(2)^2*x(3)^4
[26]:
   x(1)^2*x(2)*x(3)^5
[27]:
   x(1)*x(2)^3*x(3)^3
[28]:
   x(1)^5*x(3)^2
[29]:
   x(1)^3*x(3)^3
[30]:
   x(1)*x(3)^4
[31]:
   x(1)*x(2)^2*x(3)^3
[32]:
   x(2)^3*x(3)^3
Number of generators of the Hodge locus ideal: 35
x(3)^4
x(2)*x(3)^3
x(1)*x(3)^3
x(3)^3
x(2)^2*x(3)^2
x(1)*x(2)*x(3)^2
x(2)*x(3)^2
x(1)^2*x(3)^2
x(1)*x(3)^2
x(3)^2
x(2)^3*x(3)
x(1)*x(2)^2*x(3)
x(2)^2*x(3)
x(1)^2*x(2)*x(3)
x(1)*x(2)*x(3)
x(2)*x(3)
x(1)^3*x(3)
x(1)^2*x(3)
x(1)*x(3)
x(3)
x(2)^4
x(1)*x(2)^3
x(2)^3
x(1)^2*x(2)^2
x(1)*x(2)^2
x(2)^2
x(1)^3*x(2)
x(1)^2*x(2)
x(1)*x(2)
x(2)
x(1)^4
x(1)^3
x(1)^2
x(1)
1
Number of generators of the Hodge locus ideal: 35
x(3)^4
x(2)*x(3)^3
x(1)*x(3)^3
x(3)^3
x(2)^2*x(3)^2
x(1)*x(2)*x(3)^2
x(2)*x(3)^2
x(1)^2*x(3)^2
x(1)*x(3)^2
x(3)^2
x(2)^3*x(3)
x(1)*x(2)^2*x(3)
x(2)^2*x(3)
x(1)^2*x(2)*x(3)
x(1)*x(2)*x(3)
x(2)*x(3)
x(1)^3*x(3)
x(1)^2*x(3)
x(1)*x(3)
x(3)
x(2)^4
x(1)*x(2)^3
x(2)^3
x(1)^2*x(2)^2
x(1)*x(2)^2
x(2)^2
x(1)^3*x(2)
x(1)^2*x(2)
x(1)*x(2)
x(2)
x(1)^4
x(1)^3
x(1)^2
x(1)
1
Checking the reducedness
All Smooth, Checking tru+1 reducedness!!!!!!!!!!!!!!!!!!!!tru= 4
Codimensions of tangent spaces
27
5
Codimensions of sum of cycles in big and small deformation spaces
31 31
Codimension of the intersection of tangent spaces
32
Deformation space
[1]:
   x(1)^6*x(3)^2
[2]:
   x(1)^6*x(2)*x(3)
[3]:
   x(1)^5*x(3)^3
[4]:
   x(1)^4*x(3)^3
[5]:
   x(1)^6*x(2)^2
[6]:
   x(1)^5*x(2)*x(3)^2
[7]:
   x(1)^4*x(2)*x(3)^2
[8]:
   x(1)^4*x(3)^4
[9]:
   x(1)^3*x(3)^4
[10]:
   x(1)^2*x(3)^4
[11]:
   x(1)^5*x(2)^2*x(3)
[12]:
   x(1)^4*x(2)^2*x(3)
[13]:
   x(1)^4*x(2)*x(3)^3
[14]:
   x(1)^3*x(2)*x(3)^3
[15]:
   x(1)^2*x(2)*x(3)^3
[16]:
   x(3)^5
[17]:
   x(1)^2*x(2)*x(3)^4
[18]:
   x(1)^3*x(2)*x(3)^4
[19]:
   x(1)^4*x(2)^2*x(3)^2
[20]:
   x(1)^3*x(2)^2*x(3)^2
[21]:
   x(1)^2*x(2)^2*x(3)^2
[22]:
   x(1)*x(2)*x(3)^4
[23]:
   x(1)^2*x(2)^2*x(3)^3
[24]:
   x(1)^3*x(2)^2*x(3)^3
[25]:
   x(2)^2*x(3)^4
[26]:
   x(1)^2*x(2)*x(3)^5
[27]:
   x(1)*x(2)^3*x(3)^3
[28]:
   x(1)^5*x(3)^2
[29]:
   x(1)^3*x(3)^3
[30]:
   x(1)*x(3)^4
[31]:
   x(1)*x(2)^2*x(3)^3
[32]:
   x(2)^3*x(3)^3
Number of generators of the Hodge locus ideal: 35
x(3)^4
x(2)*x(3)^3
x(1)*x(3)^3
x(3)^3
x(2)^2*x(3)^2
x(1)*x(2)*x(3)^2
x(2)*x(3)^2
x(1)^2*x(3)^2
x(1)*x(3)^2
x(3)^2
x(2)^3*x(3)
x(1)*x(2)^2*x(3)
x(2)^2*x(3)
x(1)^2*x(2)*x(3)
x(1)*x(2)*x(3)
x(2)*x(3)
x(1)^3*x(3)
x(1)^2*x(3)
x(1)*x(3)
x(3)
x(2)^4
x(1)*x(2)^3
x(2)^3
x(1)^2*x(2)^2
x(1)*x(2)^2
x(2)^2
x(1)^3*x(2)
x(1)^2*x(2)
x(1)*x(2)
x(2)
x(1)^4
x(1)^3
x(1)^2
x(1)
1
Number of generators of the Hodge locus ideal: 35
x(3)^4
x(2)*x(3)^3
x(1)*x(3)^3
x(3)^3
x(2)^2*x(3)^2
x(1)*x(2)*x(3)^2
x(2)*x(3)^2
x(1)^2*x(3)^2
x(1)*x(3)^2
x(3)^2
x(2)^3*x(3)
x(1)*x(2)^2*x(3)
x(2)^2*x(3)
x(1)^2*x(2)*x(3)
x(1)*x(2)*x(3)
x(2)*x(3)
x(1)^3*x(3)
x(1)^2*x(3)
x(1)*x(3)
x(3)
x(2)^4
x(1)*x(2)^3
x(2)^3
x(1)^2*x(2)^2
x(1)*x(2)^2
x(2)^2
x(1)^3*x(2)
x(1)^2*x(2)
x(1)*x(2)
x(2)
x(1)^4
x(1)^3
x(1)^2
x(1)
1
Checking the reducedness
All Smooth, Checking tru+2 reducedness!!!!!!!!!!!!!!!!!!!!tru= 5
Codimensions of tangent spaces
27
5
Codimensions of sum of cycles in big and small deformation spaces
31 31
Codimension of the intersection of tangent spaces
32
Deformation space
[1]:
   x(1)^6*x(3)^2
[2]:
   x(1)^6*x(2)*x(3)
[3]:
   x(1)^5*x(3)^3
[4]:
   x(1)^4*x(3)^3
[5]:
   x(1)^6*x(2)^2
[6]:
   x(1)^5*x(2)*x(3)^2
[7]:
   x(1)^4*x(2)*x(3)^2
[8]:
   x(1)^4*x(3)^4
[9]:
   x(1)^3*x(3)^4
[10]:
   x(1)^2*x(3)^4
[11]:
   x(1)^5*x(2)^2*x(3)
[12]:
   x(1)^4*x(2)^2*x(3)
[13]:
   x(1)^4*x(2)*x(3)^3
[14]:
   x(1)^3*x(2)*x(3)^3
[15]:
   x(1)^2*x(2)*x(3)^3
[16]:
   x(3)^5
[17]:
   x(1)^2*x(2)*x(3)^4
[18]:
   x(1)^3*x(2)*x(3)^4
[19]:
   x(1)^4*x(2)^2*x(3)^2
[20]:
   x(1)^3*x(2)^2*x(3)^2
[21]:
   x(1)^2*x(2)^2*x(3)^2
[22]:
   x(1)*x(2)*x(3)^4
[23]:
   x(1)^2*x(2)^2*x(3)^3
[24]:
   x(1)^3*x(2)^2*x(3)^3
[25]:
   x(2)^2*x(3)^4
[26]:
   x(1)^2*x(2)*x(3)^5
[27]:
   x(1)*x(2)^3*x(3)^3
[28]:
   x(1)^5*x(3)^2
[29]:
   x(1)^3*x(3)^3
[30]:
   x(1)*x(3)^4
[31]:
   x(1)*x(2)^2*x(3)^3
[32]:
   x(2)^3*x(3)^3
Number of generators of the Hodge locus ideal: 35
x(3)^4
x(2)*x(3)^3
x(1)*x(3)^3
x(3)^3
x(2)^2*x(3)^2
x(1)*x(2)*x(3)^2
x(2)*x(3)^2
x(1)^2*x(3)^2
x(1)*x(3)^2
x(3)^2
x(2)^3*x(3)
x(1)*x(2)^2*x(3)
x(2)^2*x(3)
x(1)^2*x(2)*x(3)
x(1)*x(2)*x(3)
x(2)*x(3)
x(1)^3*x(3)
x(1)^2*x(3)
x(1)*x(3)
x(3)
x(2)^4
x(1)*x(2)^3
x(2)^3
x(1)^2*x(2)^2
x(1)*x(2)^2
x(2)^2
x(1)^3*x(2)
x(1)^2*x(2)
x(1)*x(2)
x(2)
x(1)^4
x(1)^3
x(1)^2
x(1)
1
Number of generators of the Hodge locus ideal: 35
x(3)^4
x(2)*x(3)^3
x(1)*x(3)^3
x(3)^3
x(2)^2*x(3)^2
x(1)*x(2)*x(3)^2
x(2)*x(3)^2
x(1)^2*x(3)^2
x(1)*x(3)^2
x(3)^2
x(2)^3*x(3)
x(1)*x(2)^2*x(3)
x(2)^2*x(3)
x(1)^2*x(2)*x(3)
x(1)*x(2)*x(3)
x(2)*x(3)
x(1)^3*x(3)
x(1)^2*x(3)
x(1)*x(3)
x(3)
x(2)^4
x(1)*x(2)^3
x(2)^3
x(1)^2*x(2)^2
x(1)*x(2)^2
x(2)^2
x(1)^3*x(2)
x(1)^2*x(2)
x(1)*x(2)
x(2)
x(1)^4
x(1)^3
x(1)^2
x(1)
1
Checking the reducedness
.                 "********************************************************************"; 
********************************************************************
> compo1;
empty list
> compo2;
empty list
> compo3;
empty list
> compo4;
[1]:
   [1]:
      3,3
   [2]:
      1,1
   [3]:
      0,0
   [4]:
      27,5,31,32
   [5]:
      [1]:
         1,-10
      [2]:
         1,-9
      [3]:
         1,-8
      [4]:
         1,-7
      [5]:
         1,-6
      [6]:
         1,-5
      [7]:
         1,-4
      [8]:
         1,-3
      [9]:
         1,-2
      [10]:
         1,-1
      [11]:
         1,0
      [12]:
         1,1
      [13]:
         1,2
      [14]:
         1,3
      [15]:
         1,4
      [16]:
         1,5
      [17]:
         1,6
      [18]:
         1,7
      [19]:
         1,8
      [20]:
         1,9
      [21]:
         1,10
      [22]:
         2,-10
      [23]:
         2,-9
      [24]:
         2,-8
      [25]:
         2,-7
      [26]:
         2,-6
      [27]:
         2,-5
      [28]:
         2,-4
      [29]:
         2,-3
      [30]:
         2,-2
      [31]:
         2,-1
      [32]:
         2,0
      [33]:
         2,1
      [34]:
         2,2
      [35]:
         2,3
      [36]:
         2,4
      [37]:
         2,5
      [38]:
         2,6
      [39]:
         2,7
      [40]:
         2,8
      [41]:
         2,9
      [42]:
         2,10
      [43]:
         3,-10
      [44]:
         3,-9
      [45]:
         3,-8
      [46]:
         3,-7
      [47]:
         3,-6
      [48]:
         3,-5
      [49]:
         3,-4
      [50]:
         3,-3
      [51]:
         3,-2
      [52]:
         3,-1
      [53]:
         3,0
      [54]:
         3,1
      [55]:
         3,2
      [56]:
         3,3
      [57]:
         3,4
      [58]:
         3,5
      [59]:
         3,6
      [60]:
         3,7
      [61]:
         3,8
      [62]:
         3,9
      [63]:
         3,10
      [64]:
         4,-10
      [65]:
         4,-9
      [66]:
         4,-8
      [67]:
         4,-7
      [68]:
         4,-6
      [69]:
         4,-5
      [70]:
         4,-4
      [71]:
         4,-3
      [72]:
         4,-2
      [73]:
         4,-1
      [74]:
         4,0
      [75]:
         4,1
      [76]:
         4,2
      [77]:
         4,3
      [78]:
         4,4
      [79]:
         4,5
      [80]:
         4,6
      [81]:
         4,7
      [82]:
         4,8
      [83]:
         4,9
      [84]:
         4,10
      [85]:
         5,-10
      [86]:
         5,-9
      [87]:
         5,-8
      [88]:
         5,-7
      [89]:
         5,-6
      [90]:
         5,-5
      [91]:
         5,-4
      [92]:
         5,-3
      [93]:
         5,-2
      [94]:
         5,-1
      [95]:
         5,0
      [96]:
         5,1
      [97]:
         5,2
      [98]:
         5,3
      [99]:
         5,4
      [100]:
         5,5
      [101]:
         5,6
      [102]:
         5,7
      [103]:
         5,8
      [104]:
         5,9
      [105]:
         5,10
      [106]:
         6,-10
      [107]:
         6,-9
      [108]:
         6,-8
      [109]:
         6,-7
      [110]:
         6,-6
      [111]:
         6,-5
      [112]:
         6,-4
      [113]:
         6,-3
      [114]:
         6,-2
      [115]:
         6,-1
      [116]:
         6,0
      [117]:
         6,1
      [118]:
         6,2
      [119]:
         6,3
      [120]:
         6,4
      [121]:
         6,5
      [122]:
         6,6
      [123]:
         6,7
      [124]:
         6,8
      [125]:
         6,9
      [126]:
         6,10
      [127]:
         7,-10
      [128]:
         7,-9
      [129]:
         7,-8
      [130]:
         7,-7
      [131]:
         7,-6
      [132]:
         7,-5
      [133]:
         7,-4
      [134]:
         7,-3
      [135]:
         7,-2
      [136]:
         7,-1
      [137]:
         7,0
      [138]:
         7,1
      [139]:
         7,2
      [140]:
         7,3
      [141]:
         7,4
      [142]:
         7,5
      [143]:
         7,6
      [144]:
         7,7
      [145]:
         7,8
      [146]:
         7,9
      [147]:
         7,10
      [148]:
         8,-10
      [149]:
         8,-9
      [150]:
         8,-8
      [151]:
         8,-7
      [152]:
         8,-6
      [153]:
         8,-5
      [154]:
         8,-4
      [155]:
         8,-3
      [156]:
         8,-2
      [157]:
         8,-1
      [158]:
         8,0
      [159]:
         8,1
      [160]:
         8,2
      [161]:
         8,3
      [162]:
         8,4
      [163]:
         8,5
      [164]:
         8,6
      [165]:
         8,7
      [166]:
         8,8
      [167]:
         8,9
      [168]:
         8,10
      [169]:
         9,-10
      [170]:
         9,-9
      [171]:
         9,-8
      [172]:
         9,-7
      [173]:
         9,-6
      [174]:
         9,-5
      [175]:
         9,-4
      [176]:
         9,-3
      [177]:
         9,-2
      [178]:
         9,-1
      [179]:
         9,0
      [180]:
         9,1
      [181]:
         9,2
      [182]:
         9,3
      [183]:
         9,4
      [184]:
         9,5
      [185]:
         9,6
      [186]:
         9,7
      [187]:
         9,8
      [188]:
         9,9
      [189]:
         9,10
      [190]:
         10,-10
      [191]:
         10,-9
      [192]:
         10,-8
      [193]:
         10,-7
      [194]:
         10,-6
      [195]:
         10,-5
      [196]:
         10,-4
      [197]:
         10,-3
      [198]:
         10,-2
      [199]:
         10,-1
      [200]:
         10,0
      [201]:
         10,1
      [202]:
         10,2
      [203]:
         10,3
      [204]:
         10,4
      [205]:
         10,5
      [206]:
         10,6
      [207]:
         10,7
      [208]:
         10,8
      [209]:
         10,9
      [210]:
         10,10
> compo4;









